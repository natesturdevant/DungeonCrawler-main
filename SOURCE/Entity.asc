import Entity Combatants[8];

String Entity::GetStringHPSP()
{
	return String.Format("HP: %d/%d[SP: %d/%d", this.stats.health, this.stats.maxHealth, this.stats.mana, this.stats.maxMana);
}

void Entity::Initialize(String name, int level)
{
	this.stats = new Stats;
	// Initialize entity i.e. remove equipment, reset stats to 1 each.
	this.name = name;
	
	this.level = level;
	this.currentExp = 0;
	this.maxExp = 100;
	
	this.stats.Initialize();
	this.stats.speed = level;
	this.isInitialized = true;
	this.combatTimer = 0;
}

void Entity::TakeDamage(int damage)
{
	this.stats.health -= damage;
	// if hp <= 0 then BattleManager.RemoveDeadEntity(this);
}

int Entity::GetDamage()
{
	return this.stats.baseDamage + this.stats.strength;
}


void Entity::Attack(int targetSlot)
{
	int damage = this.GetDamage();
	// do math
	Combatants[targetSlot].TakeDamage(damage);
	
	gInfoBarLabel.Text = String.Format("%s attacks %s for %d damage!", this.name, Combatants[targetSlot].name, damage);
	
	// at the end progress the turn order
	
	// Check if battle is over before ending the turn as it might be unnecessary or cause issues.
}

void Entity::Defend()
{
	
}

void Entity::UseItem(int targetSlot)
{
	
}

void Entity::TryToFlee()
{
	
}
